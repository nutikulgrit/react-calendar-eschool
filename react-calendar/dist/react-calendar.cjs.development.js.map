{"version":3,"file":"react-calendar.cjs.development.js","sources":["../src/Monthly/MonthlyCalendar.tsx","../src/shared.ts","../src/Monthly/MonthlyBody.tsx","../src/Monthly/MonthlyEventItems.tsx","../src/Weekly/WeeklyCalendar.tsx","../src/Weekly/WeeklyEventItems.tsx"],"sourcesContent":["import {\n  eachDayOfInterval,\n  startOfMonth,\n  endOfMonth,\n  format,\n  subMonths,\n  addMonths,\n  getYear,\n} from 'date-fns';\nimport React, { ReactNode, useContext } from 'react';\n\ntype CalendarState = {\n  days: Date[];\n  currentMonth: Date;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nconst MonthlyCalendarContext = React.createContext<CalendarState>(\n  {} as CalendarState\n);\n\nexport const useMonthlyCalendar = () => useContext(MonthlyCalendarContext);\n\ntype Props = {\n  children: ReactNode;\n  currentMonth: Date;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nexport const MonthlyCalendar = ({\n  currentMonth,\n  onCurrentMonthChange,\n  children,\n}: Props) => {\n  let monthStart = startOfMonth(currentMonth);\n  let days = eachDayOfInterval({\n    start: monthStart,\n    end: endOfMonth(monthStart),\n  });\n\n  return (\n    <MonthlyCalendarContext.Provider\n      value={{\n        days,\n        onCurrentMonthChange,\n        currentMonth: monthStart,\n      }}\n    >\n      {children}\n    </MonthlyCalendarContext.Provider>\n  );\n};\n\nexport const MonthlyNav = () => {\n  let { currentMonth, onCurrentMonthChange } = useMonthlyCalendar();\n\n  return (\n    <div className=\"flex justify-end mb-4\">\n      <button\n        onClick={() => onCurrentMonthChange(subMonths(currentMonth, 1))}\n        className=\"cursor-pointer\"\n      >\n        Previous\n      </button>\n      <div className=\"ml-4 mr-4 w-32 text-center\" aria-label=\"Current Month\">\n        {format(\n          currentMonth,\n          getYear(currentMonth) === getYear(new Date()) ? 'LLLL' : 'LLLL yyyy'\n        )}\n      </div>\n      <button\n        onClick={() => onCurrentMonthChange(addMonths(currentMonth, 1))}\n        className=\"cursor-pointer\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","export const daysInWeek = [\n  { day: 0, label: 'Sunday' },\n  { day: 1, label: 'Monday' },\n  { day: 2, label: 'Tuesday' },\n  { day: 3, label: 'Wednesday' },\n  { day: 4, label: 'Thursday' },\n  { day: 5, label: 'Friday' },\n  { day: 6, label: 'Saturday' },\n];\n","import React, { ReactNode, useContext } from 'react';\nimport { useMonthlyCalendar } from './MonthlyCalendar';\nimport { daysInWeek } from '../shared';\nimport { format, getDay, isSameDay } from 'date-fns';\n\nconst MonthlyBodyContext = React.createContext({} as any);\ntype BodyState<DayData> = {\n  day: Date;\n  events: DayData[];\n};\n\nexport function useMonthlyBody<DayData>() {\n  return useContext<BodyState<DayData>>(MonthlyBodyContext);\n}\n\ntype OmittedDaysProps = {\n  days: Date[];\n  omitDays?: number[];\n};\n\nexport const handleOmittedDays = ({ days, omitDays }: OmittedDaysProps) => {\n  let headings = daysInWeek;\n  let daysToRender = days;\n\n  //omit the headings and days of the week that were passed in\n  if (omitDays) {\n    headings = daysInWeek.filter(day => !omitDays.includes(day.day));\n    daysToRender = days.filter(day => !omitDays.includes(getDay(day)));\n  }\n\n  // omit the padding if an omitted day was before the start of the month\n  let firstDayOfMonth = getDay(daysToRender[0]) as number;\n  if (omitDays) {\n    let subtractOmittedDays = omitDays.filter(day => day < firstDayOfMonth)\n      .length;\n    firstDayOfMonth = firstDayOfMonth - subtractOmittedDays;\n  }\n  let padding = new Array(firstDayOfMonth).fill(0);\n\n  return { headings, daysToRender, padding };\n};\n\n//to prevent these from being purged in production, we make a lookup object\nconst headingClasses = {\n  l3: 'lg:grid-cols-3',\n  l4: 'lg:grid-cols-4',\n  l5: 'lg:grid-cols-5',\n  l6: 'lg:grid-cols-6',\n  l7: 'lg:grid-cols-7',\n};\n\ntype MonthlyBodyProps<DayData> = {\n  /*\n    skip days, an array of days, starts at sunday (0), saturday is 6\n    ex: [0,6] would remove sunday and saturday from rendering\n  */\n  omitDays?: number[];\n  events: (DayData & { date: Date })[];\n  children: ReactNode;\n};\n\nexport function MonthlyBody<DayData>({\n  omitDays,\n  events,\n  children,\n}: MonthlyBodyProps<DayData>) {\n  let { days } = useMonthlyCalendar();\n  let { headings, daysToRender, padding } = handleOmittedDays({\n    days,\n    omitDays,\n  });\n\n  let headingClassName = 'border-b-2 p-2 border-r-2 lg:block hidden';\n  return (\n    <div className=\"bg-white border-l-2 border-t-2\">\n      <div\n        className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 ${\n          //@ts-ignore\n          headingClasses[`l${headings.length}`]\n        }`}\n      >\n        {headings.map(day => (\n          <div\n            key={day.day}\n            className={headingClassName}\n            aria-label=\"Day of Week\"\n          >\n            {day.label}\n          </div>\n        ))}\n        {padding.map((_, index) => (\n          <div\n            key={index}\n            className={headingClassName}\n            aria-label=\"Empty Day\"\n          />\n        ))}\n        {daysToRender.map(day => (\n          <MonthlyBodyContext.Provider\n            key={day.toISOString()}\n            value={{\n              day,\n              events: events.filter(data => isSameDay(data.date, day)),\n            }}\n          >\n            {children}\n          </MonthlyBodyContext.Provider>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype MonthlyDayProps<DayData> = {\n  renderDay: (events: DayData[]) => ReactNode;\n};\nexport function MonthlyDay<DayData>({ renderDay }: MonthlyDayProps<DayData>) {\n  let { day, events } = useMonthlyBody<DayData>();\n  let dayNumber = format(day, 'd');\n\n  return (\n    <div\n      aria-label={`Events for day ${dayNumber}`}\n      className=\"h-48 p-2 border-b-2 border-r-2\"\n    >\n      <div className=\"flex justify-between\">\n        <div className=\"font-bold\">{dayNumber}</div>\n        <div className=\"lg:hidden block\">{format(day, 'EEEE')}</div>\n      </div>\n      <ul className=\"divide-gray-200 divide-y overflow-hidden max-h-36 overflow-y-auto\">\n        {renderDay(events)}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultMonthlyEventItem = ({\n  title,\n  date,\n}: DefaultEventItemProps) => {\n  return (\n    <li className=\"py-2\">\n      <div className=\"flex text-sm flex-1 justify-between\">\n        <h3 className=\"font-medium\">{title}</h3>\n        <p className=\"text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n","import {\n  startOfWeek,\n  format,\n  isSameDay,\n  getDay,\n  setDay,\n  isSameWeek,\n} from 'date-fns';\nimport React, {\n  CSSProperties,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { daysInWeek } from '../shared';\n\ntype State = {\n  week: Date;\n  selectedDay?: Date;\n  changeSelectedDay: (day?: Date) => any;\n};\n\nconst WeeklyContext = React.createContext<State>({} as State);\nexport const useWeeklyCalendar = () => useContext(WeeklyContext);\n\ntype WeeklyCalendarProps = {\n  week: Date;\n  children: ReactNode;\n};\n\nexport const WeeklyCalendar = ({ week, children }: WeeklyCalendarProps) => {\n  let [selectedDay, setSelectedDay] = useState<Date>();\n\n  //clear the selected day if the week changes\n  useEffect(() => {\n    setSelectedDay(undefined);\n  }, [week]);\n\n  return (\n    <WeeklyContext.Provider\n      value={{\n        selectedDay,\n        week: startOfWeek(week),\n        changeSelectedDay: setSelectedDay,\n      }}\n    >\n      {children}\n    </WeeklyContext.Provider>\n  );\n};\n\ntype WeeklyContainerProps = {\n  children: ReactNode;\n};\nexport const WeeklyContainer = ({ children }: WeeklyContainerProps) => {\n  return <div className=\"md:flex md:justify-between\">{children}</div>;\n};\n\ntype DayButtonProps = {\n  day: { day: number; label: string };\n};\n\nconst DayButton = ({ day }: DayButtonProps) => {\n  let { week, selectedDay, changeSelectedDay } = useWeeklyCalendar();\n  let isSelected = selectedDay ? getDay(selectedDay) === day.day : false;\n  let currentDate = setDay(week, day.day);\n  return (\n    <li\n      onClick={() => changeSelectedDay(isSelected ? undefined : currentDate)}\n      className=\"bg-white cursor-pointer\"\n      aria-label=\"Day of Week\"\n    >\n      <div\n        className={`rounded-lg border sm:w-36 text-center py-4 ${\n          isSelected\n            ? 'border-indigo-600'\n            : 'border-gray-300 hover:border-gray-500'\n        }`}\n      >\n        <p className=\"font-medium text-sm text-gray-800\">\n          {day.label} {format(currentDate, 'do')}\n        </p>\n      </div>\n    </li>\n  );\n};\n\ntype WeeklyDaysProps = {\n  omitDays?: number[];\n};\n\nexport const WeeklyDays = ({ omitDays }: WeeklyDaysProps) => {\n  let daysToRender = daysInWeek;\n\n  if (omitDays) {\n    daysToRender = daysInWeek.filter((day) => !omitDays.includes(day.day));\n  }\n  return (\n    <ul className=\"grid md:grid-cols-1 grid-cols-2 gap-2\">\n      {daysToRender.map((day) => (\n        <DayButton key={day.day} day={day} />\n      ))}\n    </ul>\n  );\n};\n\ntype RenderItemProps<EventItem> = {\n  item: EventItem & { date: Date };\n  /*\n    boolean indicating if a full week is being shwown\n    vs having a single day selected\n  */\n  showingFullWeek: boolean;\n};\n\ntype WeeklyBodyProps<EventItem> = {\n  style?: CSSProperties;\n  events: (EventItem & { date: Date })[];\n  renderItem: (item: RenderItemProps<EventItem>) => ReactNode;\n};\n\nexport function WeeklyBody<EventItem>({\n  events,\n  renderItem,\n  style,\n}: WeeklyBodyProps<EventItem>) {\n  let { week, selectedDay } = useWeeklyCalendar();\n  return (\n    <div className=\"overflow-auto max-h-96\" style={style}>\n      <ul className=\"divide-y divide-gray-200 \">\n        {events.map((item) => {\n          // If they select a single day, filter out events for different days\n          if (selectedDay) {\n            if (!isSameDay(selectedDay, item.date)) return null;\n          }\n          //if an event is for a different week, filter it out\n          if (!isSameWeek(week, item.date)) return null;\n\n          //return the remeaining events!\n          return renderItem({\n            item,\n            showingFullWeek: selectedDay === undefined,\n          });\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport const WeeklyResponsiveContainer = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  return <div className=\"border p-4 md:w-3/4 lg:w-1/2 w-full\">{children}</div>;\n};\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultWeeklyEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultWeeklyEventItem = ({\n  title,\n  date,\n}: DefaultWeeklyEventItemProps) => {\n  return (\n    <li className=\"py-4 w-72\">\n      <div className=\"text-sm flex justify-between\">\n        <h3 className=\"font-medium\">{title}</h3>\n        <p className=\"text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n"],"names":["MonthlyCalendarContext","React","createContext","useMonthlyCalendar","useContext","MonthlyCalendar","currentMonth","onCurrentMonthChange","children","monthStart","startOfMonth","days","eachDayOfInterval","start","end","endOfMonth","Provider","value","MonthlyNav","className","onClick","subMonths","format","getYear","Date","addMonths","daysInWeek","day","label","MonthlyBodyContext","useMonthlyBody","handleOmittedDays","omitDays","headings","daysToRender","filter","includes","getDay","firstDayOfMonth","subtractOmittedDays","length","padding","Array","fill","headingClasses","l3","l4","l5","l6","l7","MonthlyBody","events","headingClassName","map","key","_","index","toISOString","data","isSameDay","date","MonthlyDay","renderDay","dayNumber","DefaultMonthlyEventItem","title","WeeklyContext","useWeeklyCalendar","WeeklyCalendar","week","useState","selectedDay","setSelectedDay","useEffect","undefined","startOfWeek","changeSelectedDay","WeeklyContainer","DayButton","isSelected","currentDate","setDay","WeeklyDays","WeeklyBody","renderItem","style","item","isSameWeek","showingFullWeek","WeeklyResponsiveContainer","DefaultWeeklyEventItem"],"mappings":"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"}